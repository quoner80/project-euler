# Number spiral diagonals
#
# Starting with the number 1 and moving to the right in a clockwise direction a 5 by 5 spiral is formed as follows:
#   21 22 23 24 25
#   20  7  8  9 10
#   19  6  1  2 11
#   18  5  4  3 12
#   17 16 15 14 13
#
# It can be verified that the sum of the numbers on the diagonals is 101.
#
# What is the sum of the numbers on the diagonals in a 1001 by 1001 spiral formed in the same way?

# N = 1:
#   1
#
#   1 = 1
#   1 = 1
#   1 + 1 - 1 = 1

# N = 3:
#   7  8  9
#   6  1  2
#   5  4  3
#
#   1 + 5 + 9 = 15
#   1 + 3 + 7 = 11
#   15 + 11 - 1 = 25

# N = 5:
#   21 22 23 24 25
#   20  7  8  9 10
#   19  6  1  2 11
#   18  5  4  3 12
#   17 16 15 14 13
#
#   1 + 5 + 9 + 17 + 25 = 57
#   1 + 3 + 7 + 13 + 21 = 45
#   57 + 45 - 1 = 101

# N = 7:
#   43 44 45 46 47 48 49
#   42 21 22 23 24 25 26
#   41 20  7  8  9 10 27
#   40 19  6  1  2 11 28
#   39 18  5  4  3 12 29
#   38 17 16 15 14 13 30
#   37 36 35 34 33 32 31
#
#   1 + 5 + 9 + 17 + 25 + 37 + 49 = 143
#   1 + 3 + 7 + 13 + 21 + 31 + 43 = 119
#   143 + 119 - 1 = 261

#   1 + (1 + 4) + (0 + 9) + (1 + 16) + (0 + 25) + (1 + 36) + (0 + 49)
#      = (0 + 1) + (1 + 4) + (0 + 9) + (1 + 16) + (0 + 25) + (1 + 36) + (0 + 49)
#      = 3 + (1 + 4 + 9 + 16 + 25 + 36 + 49)
#      = (6 / 2) + (1^2 + 2^2 + 3^2 + 4^2 + 5^2 + 6^2 + 7^2)
#      = ((N - 1) / 2) + Sum((1^2)..(N^2))
#      = ((N - 1) / 2) + (N * (N + 1) * ((2 * N) + 1) / 6) 

#   1 + 3 + 7 + 13 + 21 + 31 + 43
#      = 1 + (1 + 2) + (1 + 6) + (1 + 12) + (1 + 20) + (1 + 30) + (1 + 42)
#      = 1 + (1 + (2 * 1)) + (1 + (2 * 3)) + (1 + (2 * 6)) + (1 + (2 * 10)) + (1 + (2 * 15)) + (1 + (2 * 21))
#      = (1 * 7) + (2 * (1 + 3 + 6 + 10 + 15 + 21))
#      = 7 + (2 * (T[1] + T[2] + T[3] + T[4] + T[5] + T[6])) where T[n] is the nth triangular number
#      = N + (2 * Sum(T[1]..T[N-1]))
#      = N + (2 * Tetrahedral[N-1])
#      = N + (2 * (N - 1) * ((N - 1) + 1) * ((N - 1) + 2) / 6)
#      = N + (2 * (N - 1) * N * (N + 1) / 6)

#   ((N - 1) / 2) + (N * (N + 1) * ((2 * N) + 1) / 6) + N + (2 * (N - 1) * N * (N + 1) / 6) - 1

import time;

start_time = time.time();

for N in [1, 3, 5, 7, 1001]:
    print "N = %d, sum = %d." % (N, ((N - 1) / 2) + (N * (N + 1) * ((2 * N) + 1) / 6) + N + (2 * (N - 1) * N * (N + 1) / 6) - 1);

print "Execution time = %f seconds." % (time.time() - start_time);
